import { Application } from './application.mjs';
export { getApplication } from './application.mjs';
export { Container } from './container/container.mjs';
export { ContextualBindingBuilder } from './container/contextual-binding.mjs';
export { loggerMiddleware } from './container/middleware/logger-middleware.mjs';
export { cacheMiddleware, createCacheMiddleware } from './container/middleware/cache-middleware.mjs';
export { metricsMiddleware } from './container/middleware/metrics-middleware.mjs';
export { ConfigRepository } from './config/repository.mjs';
export { detectEnvironment, getNodeEnv, isBrowser, isDevelopment, isNextJs, isNode, isProduction, isReactNative, isTest } from './config/environment.mjs';
export { ConfigCache } from './config/cache.mjs';
export { ConfigValidationError, ConfigValidator } from './config/validator.mjs';
export { JsonConfigLoader } from './config/loaders/json-config-loader.mjs';
export { ModuleConfigLoader } from './config/loaders/module-config-loader.mjs';
export { Config } from './config/decorators/config.decorator.mjs';
export { EnvConfig } from './config/decorators/env-config.decorator.mjs';
export { Facade, createFacadeProxy } from './facades/facade.mjs';
export { App } from './facades/app.mjs';
export { Cache as CacheFacade } from './facades/cache.mjs';
export { Config as ConfigFacade } from './facades/config.mjs';
export { default as AppServiceProvider } from './providers/app-service-provider.mjs';
export { default as ConfigServiceProvider } from './providers/config-service-provider.mjs';
export { AppContext } from './react/contexts/app.context.mjs';
export { ContainerContext } from './react/contexts/container.context.mjs';
export { useApp } from './react/hooks/app/use-app.mjs';
export { useService } from './react/hooks/app/use-service.mjs';
export { useICache } from './react/hooks/cache/use-cache-manager.mjs';
export { useCacheValue } from './react/hooks/cache/use-cache-value.mjs';
export { useCachedData } from './react/hooks/cache/use-cached-data.mjs';
export { useMultiCacheValues } from './react/hooks/cache/use-multi-cache-values.mjs';
export { useAllConfig } from './react/hooks/config/use-all-config.mjs';
export { useConfig } from './react/hooks/config/use-config.mjs';
export { useConfigState } from './react/hooks/config/use-config-state.mjs';
export { useHasConfig } from './react/hooks/config/use-has-config.mjs';
export { useContainer } from './react/hooks/container/use-container.mjs';
export { useResolve } from './react/hooks/container/use-resolve.mjs';
export { withServices } from './react/hooks/container/with-services.mjs';
export { AppProvider } from './react/providers/app.provider.mjs';
export { ContainerProvider } from './react/providers/container.provider.mjs';
export { Publisher } from './publish/publisher.mjs';
export { PublishServiceProvider } from './publish/publish-service-provider.mjs';
export { AbstractDecorator, createClassDecorator, createMethodDecorator, createParameterDecorator, createPropertyDecorator } from './decorators/abstract-decorator.mjs';
export { AbstractValidationDecorator } from './decorators/abstract-validation.decorator.mjs';
export { Singleton, SingletonDecorator } from './decorators/singleton-decorator.mjs';
export { LogClass, LogDecorator, LogMethod } from './decorators/log-decorator.mjs';
export { NextJsPlugin, NextJsPluginOptions, createNextJsPlugin, default as nextjs } from './plugins/nextjs.mjs';
export { ServiceProvider } from './service-provider.mjs';
import 'inversify';
import '@pixielity/ts-types';
import './container/contextual-builder.mjs';
import './container/metrics/metrics.mjs';
import './container/metrics/metrics.interface.mjs';
import 'react';
import './publish/publisher.interface.mjs';
import 'class-validator';
import 'next';
import 'next/app';

declare const app: Application;

export { Application, app };
